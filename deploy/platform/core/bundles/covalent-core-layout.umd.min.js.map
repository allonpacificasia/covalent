{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@covalent/core/layout/layout.component.ts","ng://@covalent/core/layout/layout-toggle.class.ts","ng://@covalent/core/layout/layout.directives.ts","ng://@covalent/core/layout/layout-nav/layout-nav.component.ts","ng://@covalent/core/layout/layout-nav-list/layout-nav-list.component.ts","ng://@covalent/core/layout/layout-nav-list/layout-nav-list.directives.ts","ng://@covalent/core/layout/layout-card-over/layout-card-over.component.ts","ng://@covalent/core/layout/layout-manage-list/layout-manage-list.component.ts","ng://@covalent/core/layout/layout-manage-list/layout-manage-list.directives.ts","ng://@covalent/core/layout/layout-footer/layout-footer.component.ts","ng://@covalent/core/layout/navigation-drawer/navigation-drawer.component.ts","ng://@covalent/core/layout/layout.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","TypeError","String","__","this","constructor","create","TdLayoutComponent","mode","opened","sidenavWidth","containerAutosize","defineProperty","toggle","sidenav","open","close","Component","args","selector","template","ViewChild","MatSidenav","static","Input","LayoutToggleBase","_TdLayoutToggleMixinBase","mixinDisabled","LayoutToggle","_super","_layout","_renderer","_elementRef","_this","_initialized","_hideWhenOpened","_noLayoutMessage","addClass","nativeElement","hideWhenOpened","_toggleVisibility","ngAfterViewInit","_toggleSubs","_animationStarted","subscribe","ngOnDestroy","unsubscribe","undefined","clickListener","event","preventDefault","disabled","onClick","setStyle","console","warn","HostListener","TdLayoutToggleDirective","layout","renderer","elementRef","tdLayoutToggle","Directive","decorators","type","Optional","Inject","forwardRef","Renderer2","ElementRef","TdLayoutCloseDirective","tdLayoutClose","TdLayoutOpenDirective","tdLayoutOpen","TdLayoutNavComponent","_router","color","navigationRoute","handleNavigationClick","routerEnabled","navigateByUrl","Router","TdLayoutNavListComponent","TdLayoutNavListToggleDirective","tdLayoutNavListToggle","inputs","TdLayoutNavListCloseDirective","tdLayoutNavListClose","TdLayoutNavListOpenDirective","tdLayoutNavListOpen","TdLayoutCardOverComponent","cardWidth","TdLayoutManageListComponent","TdLayoutManageListToggleDirective","tdLayoutManageListToggle","TdLayoutManageListCloseDirective","tdLayoutManageListClose","TdLayoutManageListOpenDirective","tdLayoutManageListOpen","TdLayoutFooterComponent","_color","removeClass","TdNavigationDrawerMenuDirective","TdNavigationDrawerToolbarDirective","TdNavigationDrawerComponent","_sanitize","_menuToggled","_drawerMenu","length","_toolbar","_backgroundImage","backgroundUrl","sanitizedUrl","sanitize","SecurityContext","RESOURCE_URL","STYLE","ngOnInit","_closeSubscription","openedChange","toggleMenu","isMenuAvailable","animations","tdCollapseAnimation","DomSanitizer","ContentChildren","descendants","TD_LAYOUTS","CovalentLayoutModule","NgModule","imports","CommonModule","ScrollingModule","MatSidenavModule","MatToolbarModule","MatButtonModule","MatIconModule","MatCardModule","MatDividerModule","declarations","exports"],"mappings":"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","sourcesContent":["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.push(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.push(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","import { Component, Input, ViewChild } from '@angular/core';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ILayoutTogglable } from './layout-toggle.class';\n\n@Component({\n  selector: 'td-layout',\n  styleUrls: ['./layout.component.scss'],\n  templateUrl: './layout.component.html',\n})\nexport class TdLayoutComponent implements ILayoutTogglable {\n  @ViewChild(MatSidenav, { static: true }) sidenav: MatSidenav;\n\n  /**\n   * mode?: 'side', 'push' or 'over'\n   *\n   * The mode or styling of the sidenav.\n   * Defaults to \"over\".\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() mode: 'side' | 'push' | 'over' = 'over';\n\n  /**\n   * opened?: boolean\n   *\n   * Whether or not the sidenav is opened. Use this binding to open/close the sidenav.\n   * Defaults to \"false\".\n   *\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() opened: boolean = false;\n\n  /**\n   * sidenavWidth?: string\n   *\n   * Sets the \"width\" of the sidenav in either \"px\" or \"%\"\n   * Defaults to \"320px\".\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() sidenavWidth: string = '320px';\n\n  /**\n   * containerAutosize?: boolean\n   *\n   * Sets \"autosize\" of the sidenav-container.\n   * Defaults to \"false\".\n   *\n   * See documentation for more info and potential performance risks.\n   *\n   * https://github.com/angular/material2/blob/master/src/lib/sidenav/sidenav.md#resizing-an-open-sidenav\n   */\n  @Input() containerAutosize: boolean = false;\n\n  /**\n   * Checks if `ESC` should close the sidenav\n   * Should only close it for `push` and `over` modes\n   */\n  get disableClose(): boolean {\n    return this.mode === 'side';\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.toggle(!this.sidenav.opened);\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.close();\n  }\n}\n","import { Input, HostBinding, HostListener, Renderer2, ElementRef, AfterViewInit, OnDestroy } from '@angular/core';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ICanDisable, mixinDisabled } from '@covalent/core/common';\n\nimport { Subscription } from 'rxjs';\n\nexport interface ILayoutTogglable {\n  opened: boolean;\n  sidenav: MatSidenav;\n  toggle(): Promise<MatDrawerToggleResult>;\n  open(): Promise<MatDrawerToggleResult>;\n  close(): Promise<MatDrawerToggleResult>;\n}\n\nexport class LayoutToggleBase {}\n\n/* tslint:disable-next-line */\nexport const _TdLayoutToggleMixinBase = mixinDisabled(LayoutToggleBase);\n\nexport abstract class LayoutToggle extends _TdLayoutToggleMixinBase implements AfterViewInit, OnDestroy, ICanDisable {\n  private _toggleSubs: Subscription;\n\n  private _initialized: boolean = false;\n  private _hideWhenOpened: boolean = false;\n\n  /**\n   * hideWhenOpened?: boolean\n   * When this is set to true, the host will be hidden when\n   * the sidenav is opened.\n   */\n  @Input('hideWhenOpened')\n  set hideWhenOpened(hideWhenOpened: boolean) {\n    this._hideWhenOpened = hideWhenOpened;\n    if (this._initialized) {\n      this._toggleVisibility();\n    }\n  }\n\n  constructor(protected _layout: ILayoutTogglable, private _renderer: Renderer2, private _elementRef: ElementRef) {\n    super();\n    // if layout has not been provided\n    // show warn message\n    if (!this._layout) {\n      this._noLayoutMessage();\n    }\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-layout-menu-button');\n  }\n\n  ngAfterViewInit(): void {\n    this._initialized = true;\n    if (this._layout && this._layout.sidenav) {\n      this._toggleSubs = this._layout.sidenav._animationStarted.subscribe(() => {\n        this._toggleVisibility();\n      });\n    }\n    // execute toggleVisibility since the onOpenStart and onCloseStart\n    // methods might not be executed always when the element is rendered\n    this._toggleVisibility();\n  }\n\n  ngOnDestroy(): void {\n    if (this._toggleSubs) {\n      this._toggleSubs.unsubscribe();\n      this._toggleSubs = undefined;\n    }\n  }\n\n  /**\n   * Listens to host click event to trigger the layout toggle\n   */\n  @HostListener('click', ['$event'])\n  clickListener(event: Event): void {\n    event.preventDefault();\n    if (!this.disabled) {\n      // if layout has been provided, try triggering the click on it\n      // else show warn message\n      if (this._layout && this._layout.open) {\n        this.onClick();\n      } else {\n        this._noLayoutMessage();\n      }\n    }\n  }\n\n  abstract onClick(): void;\n\n  private _toggleVisibility(): void {\n    if (this._layout) {\n      if (this._layout.sidenav.opened && this._hideWhenOpened) {\n        this._renderer.setStyle(this._elementRef.nativeElement, 'display', 'none');\n      } else {\n        this._renderer.setStyle(this._elementRef.nativeElement, 'display', '');\n      }\n    }\n  }\n\n  private _noLayoutMessage(): void {\n    /* tslint:disable-next-line */\n    console.warn('Covalent: Parent layout not found for layout toggle directive');\n  }\n}\n","import { Optional, Directive, Input, Renderer2, ElementRef, Inject, forwardRef } from '@angular/core';\nimport { TdLayoutComponent } from './layout.component';\nimport { LayoutToggle } from './layout-toggle.class';\n\n@Directive({\n  selector: '[tdLayoutToggle]',\n})\nexport class TdLayoutToggleDirective extends LayoutToggle {\n  @Input('tdLayoutToggle')\n  set tdLayoutToggle(tdLayoutToggle: boolean) {\n    this.disabled = !(<any>tdLayoutToggle === '' || tdLayoutToggle);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutComponent)) layout: TdLayoutComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.toggle();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutClose]',\n})\nexport class TdLayoutCloseDirective extends LayoutToggle {\n  @Input('tdLayoutClose')\n  set tdLayoutClose(tdLayoutClose: boolean) {\n    this.disabled = !(<any>tdLayoutClose === '' || tdLayoutClose);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutComponent)) layout: TdLayoutComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.close();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutOpen]',\n})\nexport class TdLayoutOpenDirective extends LayoutToggle {\n  @Input('tdLayoutOpen')\n  set tdLayoutClose(tdLayoutOpen: boolean) {\n    this.disabled = !(<any>tdLayoutOpen === '' || tdLayoutOpen);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutComponent)) layout: TdLayoutComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.open();\n  }\n}\n","import { Component, Input, forwardRef, Optional, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TdLayoutComponent } from '../layout.component';\n\n@Component({\n  selector: 'td-layout-nav',\n  styleUrls: ['./layout-nav.component.scss'],\n  templateUrl: './layout-nav.component.html',\n})\nexport class TdLayoutNavComponent {\n  /**\n   * toolbarTitle?: string\n   *\n   * Title set in toolbar.\n   */\n  @Input() toolbarTitle: string;\n\n  /**\n   * icon?: string\n   *\n   * icon name to be displayed before the title\n   */\n  @Input() icon: string;\n\n  /**\n   * logo?: string\n   *\n   * logo icon name to be displayed before the title.\n   * If [icon] is set, then this will not be shown.\n   */\n  @Input() logo: string;\n\n  /**\n   * color?: 'accent' | 'primary' | 'warn'\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, primary is used.\n   */\n  @Input() color: 'accent' | 'primary' | 'warn' = 'primary';\n\n  /**\n   * navigationRoute?: string\n   *\n   * option to set the combined route for the icon, logo, and toolbarTitle.\n   */\n  @Input() navigationRoute: string;\n\n  /**\n   * Checks if router was injected.\n   */\n  get routerEnabled(): boolean {\n    return !!this._router && !!this.navigationRoute;\n  }\n\n  constructor(@Optional() private _router: Router) {}\n\n  handleNavigationClick(): void {\n    if (this.routerEnabled) {\n      this._router.navigateByUrl(this.navigationRoute);\n    }\n  }\n}\n","import { Component, Input, ViewChild, Optional } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ILayoutTogglable } from '../layout-toggle.class';\n\n@Component({\n  selector: 'td-layout-nav-list',\n  styleUrls: ['./layout-nav-list.component.scss'],\n  templateUrl: './layout-nav-list.component.html',\n})\nexport class TdLayoutNavListComponent implements ILayoutTogglable {\n  @ViewChild(MatSidenav, { static: true }) sidenav: MatSidenav;\n\n  /**\n   * toolbarTitle?: string\n   *\n   * Title set in toolbar.\n   */\n  @Input() toolbarTitle: string;\n\n  /**\n   * icon?: string\n   * icon name to be displayed before the title\n   */\n  @Input() icon: string;\n\n  /**\n   * logo?: string\n   *\n   * logo icon name to be displayed before the title.\n   * If [icon] is set, then this will not be shown.\n   */\n  @Input() logo: string;\n\n  /**\n   * color?: 'accent' | 'primary' | 'warn'\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, primary is used.\n   */\n  @Input() color: 'accent' | 'primary' | 'warn' = 'primary';\n\n  /**\n   * mode?: 'side', 'push' or 'over'\n   *\n   * The mode or styling of the sidenav.\n   * Defaults to \"side\".\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() mode: 'side' | 'push' | 'over' = 'side';\n\n  /**\n   * opened?: boolean\n   * Whether or not the sidenav is opened. Use this binding to open/close the sidenav.\n   * Defaults to \"true\".\n   *\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() opened: boolean = true;\n\n  /**\n   * sidenavWidth?: string\n   *\n   * Sets the \"width\" of the sidenav in either \"px\" or \"%\"\n   * Defaults to \"350px\".\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() sidenavWidth: string = '350px';\n\n  /**\n   * containerAutosize?: boolean\n   *\n   * Sets \"autosize\" of the sidenav-container.\n   * Defaults to \"false\".\n   *\n   * See documentation for more info and potential performance risks.\n   *\n   * https://github.com/angular/material2/blob/master/src/lib/sidenav/sidenav.md#resizing-an-open-sidenav\n   */\n  @Input() containerAutosize: boolean = false;\n\n  /**\n   * navigationRoute?: string\n   *\n   * option to set the combined route for the icon, logo, and toolbarTitle.\n   */\n  @Input() navigationRoute: string;\n\n  /**\n   * Checks if `ESC` should close the sidenav\n   * Should only close it for `push` and `over` modes\n   */\n  get disableClose(): boolean {\n    return this.mode === 'side';\n  }\n\n  /**\n   * Checks if router was injected.\n   */\n  get routerEnabled(): boolean {\n    return !!this._router && !!this.navigationRoute;\n  }\n\n  constructor(@Optional() private _router: Router) {}\n\n  handleNavigationClick(): void {\n    if (this.routerEnabled) {\n      this._router.navigateByUrl(this.navigationRoute);\n    }\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.toggle(!this.sidenav.opened);\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.close();\n  }\n}\n","import { Optional, Directive, Input, Renderer2, ElementRef, Inject, forwardRef } from '@angular/core';\nimport { TdLayoutNavListComponent } from './layout-nav-list.component';\nimport { LayoutToggle } from '../layout-toggle.class';\n\n@Directive({\n  selector: '[tdLayoutNavListToggle]',\n  inputs: ['hideWhenOpened'],\n})\nexport class TdLayoutNavListToggleDirective extends LayoutToggle {\n  @Input('tdLayoutNavListToggle')\n  set tdLayoutNavListToggle(tdLayoutNavListToggle: boolean) {\n    this.disabled = !(<any>tdLayoutNavListToggle === '' || tdLayoutNavListToggle);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutNavListComponent)) layout: TdLayoutNavListComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.toggle();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutNavListClose]',\n  inputs: ['hideWhenOpened'],\n})\nexport class TdLayoutNavListCloseDirective extends LayoutToggle {\n  @Input('tdLayoutNavListClose')\n  set tdLayoutNavListClose(tdLayoutNavListClose: boolean) {\n    this.disabled = !(<any>tdLayoutNavListClose === '' || tdLayoutNavListClose);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutNavListComponent)) layout: TdLayoutNavListComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.close();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutNavListOpen]',\n  inputs: ['hideWhenOpened'],\n})\nexport class TdLayoutNavListOpenDirective extends LayoutToggle {\n  @Input('tdLayoutNavListOpen')\n  set tdLayoutNavListOpen(tdLayoutNavListOpen: boolean) {\n    this.disabled = !(<any>tdLayoutNavListOpen === '' || tdLayoutNavListOpen);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutNavListComponent)) layout: TdLayoutNavListComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.open();\n  }\n}\n","import { Component } from '@angular/core';\nimport { Input } from '@angular/core';\n\n@Component({\n  selector: 'td-layout-card-over',\n  styleUrls: ['./layout-card-over.component.scss'],\n  templateUrl: './layout-card-over.component.html',\n})\nexport class TdLayoutCardOverComponent {\n  /**\n   * cardTitle?: string\n   *\n   * Title set in card.\n   */\n  @Input() cardTitle: string;\n\n  /**\n   * cardSubtitle?: string\n   *\n   * Subtitle set in card.\n   */\n  @Input() cardSubtitle: string;\n\n  /**\n   * cardWidth?: string\n   *\n   * Card flex width in %.\n   * Defaults to 70%.\n   */\n  @Input() cardWidth: number = 70;\n\n  /**\n   * color?: 'accent' | 'primary' | 'warn'\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, primary is used.\n   */\n  @Input() color: 'accent' | 'primary' | 'warn' = 'primary';\n}\n","import { Component, Directive, Input, ViewChild } from '@angular/core';\n\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { ILayoutTogglable } from '../layout-toggle.class';\n\n@Component({\n  selector: 'td-layout-manage-list',\n  styleUrls: ['./layout-manage-list.component.scss'],\n  templateUrl: './layout-manage-list.component.html',\n})\nexport class TdLayoutManageListComponent implements ILayoutTogglable {\n  @ViewChild(MatSidenav, { static: true }) sidenav: MatSidenav;\n\n  /**\n   * mode?: 'side', 'push' or 'over'\n   *\n   * The mode or styling of the sidenav.\n   * Defaults to \"side\".\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() mode: 'side' | 'push' | 'over' = 'side';\n\n  /**\n   * opened?: boolean\n   *\n   * Whether or not the sidenav is opened. Use this binding to open/close the sidenav.\n   * Defaults to \"true\".\n   *\n   * See \"MatSidenav\" documentation for more info.\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() opened: boolean = true;\n\n  /**\n   * sidenavWidth?: string\n   *\n   * Sets the \"width\" of the sidenav in either \"px\" or \"%\"\n   * Defaults to \"257px\".\n   *\n   * https://github.com/angular/material2/tree/master/src/lib/sidenav\n   */\n  @Input() sidenavWidth: string = '257px';\n\n  /**\n   * containerAutosize?: boolean\n   *\n   * Sets \"autosize\" of the sidenav-container.\n   * Defaults to \"false\".\n   *\n   * See documentation for more info and potential performance risks.\n   *\n   * https://github.com/angular/material2/blob/master/src/lib/sidenav/sidenav.md#resizing-an-open-sidenav\n   */\n  @Input() containerAutosize: boolean = false;\n\n  /**\n   * Checks if `ESC` should close the sidenav\n   * Should only close it for `push` and `over` modes\n   */\n  get disableClose(): boolean {\n    return this.mode === 'side';\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.toggle(!this.sidenav.opened);\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this.sidenav.close();\n  }\n}\n","import { Optional, Directive, Input, Renderer2, ElementRef, Inject, forwardRef } from '@angular/core';\nimport { TdLayoutManageListComponent } from './layout-manage-list.component';\nimport { LayoutToggle } from '../layout-toggle.class';\n\n@Directive({\n  selector: '[tdLayoutManageListToggle]',\n  inputs: ['hideWhenOpened'],\n})\nexport class TdLayoutManageListToggleDirective extends LayoutToggle {\n  @Input('tdLayoutManageListToggle')\n  set tdLayoutManageListToggle(tdLayoutManageListToggle: boolean) {\n    this.disabled = !(<any>tdLayoutManageListToggle === '' || tdLayoutManageListToggle);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutManageListComponent)) layout: TdLayoutManageListComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.toggle();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutManageListClose]',\n  inputs: ['hideWhenOpened'],\n})\nexport class TdLayoutManageListCloseDirective extends LayoutToggle {\n  @Input('tdLayoutManageListClose')\n  set tdLayoutManageListClose(tdLayoutManageListClose: boolean) {\n    this.disabled = !(<any>tdLayoutManageListClose === '' || tdLayoutManageListClose);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutManageListComponent)) layout: TdLayoutManageListComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.close();\n  }\n}\n\n@Directive({\n  selector: '[tdLayoutManageListOpen]',\n  inputs: ['hideWhenOpened'],\n})\nexport class TdLayoutManageListOpenDirective extends LayoutToggle {\n  @Input('tdLayoutManageListOpen')\n  set tdLayoutManageListOpen(tdLayoutManageListOpen: boolean) {\n    this.disabled = !(<any>tdLayoutManageListOpen === '' || tdLayoutManageListOpen);\n  }\n\n  constructor(\n    @Optional() @Inject(forwardRef(() => TdLayoutManageListComponent)) layout: TdLayoutManageListComponent,\n    renderer: Renderer2,\n    elementRef: ElementRef,\n  ) {\n    super(layout, renderer, elementRef);\n  }\n\n  onClick(): void {\n    this._layout.open();\n  }\n}\n","import { Component, Input, Renderer2, ElementRef } from '@angular/core';\n\n@Component({\n  /* tslint:disable-next-line */\n  selector: 'td-layout-footer,td-layout-footer-inner',\n  styleUrls: ['./layout-footer.component.scss'],\n  templateUrl: './layout-footer.component.html',\n})\nexport class TdLayoutFooterComponent {\n  private _color: 'primary' | 'accent' | 'warn';\n\n  /**\n   * color?: 'accent' | 'primary' | 'warn'\n   *\n   * Optional color option: primary | accent | warn.\n   */\n  @Input('color')\n  set color(color: 'primary' | 'accent' | 'warn') {\n    if (color) {\n      this._renderer.removeClass(this._elementRef.nativeElement, 'mat-' + this._color);\n      this._color = color;\n      this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + this._color);\n    }\n  }\n  get color(): 'primary' | 'accent' | 'warn' {\n    return this._color;\n  }\n\n  constructor(private _renderer: Renderer2, private _elementRef: ElementRef) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-layout-footer');\n  }\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  ContentChildren,\n  OnInit,\n  OnDestroy,\n  forwardRef,\n  Inject,\n  QueryList,\n  SecurityContext,\n  Optional,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SafeResourceUrl, SafeStyle, DomSanitizer } from '@angular/platform-browser';\nimport { MatDrawerToggleResult } from '@angular/material/sidenav';\n\nimport { Subscription } from 'rxjs';\n\nimport { TdLayoutComponent } from '../layout.component';\n\nimport { tdCollapseAnimation } from '@covalent/core/common';\n\n@Directive({\n  selector: '[td-navigation-drawer-menu]',\n})\nexport class TdNavigationDrawerMenuDirective {}\n\n@Directive({\n  selector: '[td-navigation-drawer-toolbar]',\n})\nexport class TdNavigationDrawerToolbarDirective {}\n\n@Component({\n  selector: 'td-navigation-drawer',\n  styleUrls: ['./navigation-drawer.component.scss'],\n  templateUrl: './navigation-drawer.component.html',\n  animations: [tdCollapseAnimation],\n})\nexport class TdNavigationDrawerComponent implements OnInit, OnDestroy {\n  private _closeSubscription: Subscription;\n  private _menuToggled: boolean = false;\n  private _backgroundImage: SafeStyle;\n\n  get menuToggled(): boolean {\n    return this._menuToggled;\n  }\n\n  @ContentChildren(TdNavigationDrawerMenuDirective, { descendants: true }) _drawerMenu: QueryList<\n    TdNavigationDrawerMenuDirective\n  >;\n\n  @ContentChildren(TdNavigationDrawerToolbarDirective, { descendants: true }) _toolbar: QueryList<\n    TdNavigationDrawerToolbarDirective\n  >;\n\n  /**\n   * Checks if there is a [TdNavigationDrawerMenuDirective] has content.\n   */\n  get isMenuAvailable(): boolean {\n    return this._drawerMenu ? this._drawerMenu.length > 0 : false;\n  }\n\n  /**\n   * Checks if there is a [TdNavigationDrawerToolbarDirective] has content.\n   */\n  get isCustomToolbar(): boolean {\n    return this._toolbar ? this._toolbar.length > 0 : false;\n  }\n\n  /**\n   * Checks if there is a background image for the toolbar.\n   */\n  get isBackgroundAvailable(): boolean {\n    return !!this._backgroundImage;\n  }\n\n  /**\n   * sidenavTitle?: string\n   * Title set in sideNav.\n   */\n  @Input() sidenavTitle: string;\n\n  /**\n   * icon?: string\n   *\n   * icon name to be displayed before the title\n   */\n  @Input() icon: string;\n\n  /**\n   * logo?: string\n   *\n   * logo icon name to be displayed before the title.\n   * If [icon] is set, then this will not be shown.\n   */\n  @Input() logo: string;\n\n  /**\n   * avatar?: string\n   *\n   * avatar url to be displayed before the title\n   * If [icon] or [logo] are set, then this will not be shown.\n   */\n  @Input() avatar: string;\n\n  /**\n   * color?: 'accent' | 'primary' | 'warn'\n   *\n   * toolbar color option: primary | accent | warn.\n   * If [color] is not set, default is used.\n   */\n  @Input() color: 'accent' | 'primary' | 'warn';\n\n  /**\n   * navigationRoute?: string\n   *\n   * option to set the combined route for the icon, logo, and sidenavTitle.\n   */\n  @Input() navigationRoute: string;\n\n  /**\n   * backgroundUrl?: SafeResourceUrl\n   *\n   * image to be displayed as the background of the toolbar.\n   * URL used will be sanitized, but it should be always from a trusted source to avoid XSS.\n   */\n  @Input('backgroundUrl')\n  // TODO Angular complains with warnings if this is type [SafeResourceUrl].. so we will make it <any> until its fixed.\n  // https://github.com/webpack/webpack/issues/2977\n  set backgroundUrl(backgroundUrl: any) {\n    if (backgroundUrl) {\n      const sanitizedUrl: string = this._sanitize.sanitize(SecurityContext.RESOURCE_URL, backgroundUrl);\n      this._backgroundImage = this._sanitize.sanitize(SecurityContext.STYLE, 'url(' + sanitizedUrl + ')');\n    }\n  }\n  get backgroundImage(): SafeStyle {\n    return this._backgroundImage;\n  }\n\n  /**\n   * name?: string\n   *\n   * string to be displayed as part of the navigation drawer sublabel.\n   * if [email] is not set, then [name] will be the toggle menu text.\n   */\n  @Input() name: string;\n\n  /**\n   * email?: string\n   *\n   * string to be displayed as part of the navigation drawer sublabel in the [toggle] menu text.\n   * if [email] and [name] are not set, then the toggle menu is not rendered.\n   */\n  @Input() email: string;\n\n  /**\n   * Checks if router was injected.\n   */\n  get routerEnabled(): boolean {\n    return !!this._router && !!this.navigationRoute;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => TdLayoutComponent)) private _layout: TdLayoutComponent,\n    @Optional() private _router: Router,\n    private _sanitize: DomSanitizer,\n  ) {}\n\n  ngOnInit(): void {\n    this._closeSubscription = this._layout.sidenav.openedChange.subscribe((opened: boolean) => {\n      if (!opened) {\n        this._menuToggled = false;\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this._closeSubscription) {\n      this._closeSubscription.unsubscribe();\n      this._closeSubscription = undefined;\n    }\n  }\n\n  toggleMenu(): void {\n    if (this.isMenuAvailable) {\n      this._menuToggled = !this._menuToggled;\n    }\n  }\n\n  handleNavigationClick(): void {\n    if (this.routerEnabled) {\n      this._router.navigateByUrl(this.navigationRoute);\n      this.close();\n    }\n  }\n\n  /**\n   * Proxy toggle method to access sidenav from outside (from td-layout template).\n   */\n  public toggle(): Promise<MatDrawerToggleResult> {\n    return this._layout.toggle();\n  }\n\n  /**\n   * Proxy open method to access sidenav from outside (from td-layout template).\n   */\n  public open(): Promise<MatDrawerToggleResult> {\n    return this._layout.open();\n  }\n\n  /**\n   * Proxy close method to access sidenav from outside (from td-layout template).\n   */\n  public close(): Promise<MatDrawerToggleResult> {\n    return this._layout.close();\n  }\n}\n","import { Type } from '@angular/core';\nimport { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\n\nimport { TdLayoutComponent } from './layout.component';\nimport { TdLayoutToggleDirective, TdLayoutCloseDirective, TdLayoutOpenDirective } from './layout.directives';\nimport { TdLayoutNavComponent } from './layout-nav/layout-nav.component';\nimport { TdLayoutNavListComponent } from './layout-nav-list/layout-nav-list.component';\nimport {\n  TdLayoutNavListToggleDirective,\n  TdLayoutNavListCloseDirective,\n  TdLayoutNavListOpenDirective,\n} from './layout-nav-list/layout-nav-list.directives';\nimport { TdLayoutCardOverComponent } from './layout-card-over/layout-card-over.component';\nimport { TdLayoutManageListComponent } from './layout-manage-list/layout-manage-list.component';\nimport {\n  TdLayoutManageListToggleDirective,\n  TdLayoutManageListCloseDirective,\n  TdLayoutManageListOpenDirective,\n} from './layout-manage-list/layout-manage-list.directives';\nimport { TdLayoutFooterComponent } from './layout-footer/layout-footer.component';\n\nimport {\n  TdNavigationDrawerComponent,\n  TdNavigationDrawerMenuDirective,\n  TdNavigationDrawerToolbarDirective,\n} from './navigation-drawer/navigation-drawer.component';\n\nconst TD_LAYOUTS: Type<any>[] = [\n  TdLayoutComponent,\n  TdLayoutToggleDirective,\n  TdLayoutCloseDirective,\n  TdLayoutOpenDirective,\n\n  TdLayoutNavComponent,\n\n  TdLayoutNavListComponent,\n  TdLayoutNavListToggleDirective,\n  TdLayoutNavListCloseDirective,\n  TdLayoutNavListOpenDirective,\n\n  TdLayoutCardOverComponent,\n\n  TdLayoutManageListComponent,\n  TdLayoutManageListToggleDirective,\n  TdLayoutManageListCloseDirective,\n  TdLayoutManageListOpenDirective,\n\n  TdLayoutFooterComponent,\n\n  TdNavigationDrawerComponent,\n  TdNavigationDrawerMenuDirective,\n  TdNavigationDrawerToolbarDirective,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ScrollingModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatDividerModule,\n  ],\n  declarations: [TD_LAYOUTS],\n  exports: [TD_LAYOUTS],\n})\nexport class CovalentLayoutModule {}\n"]}